{"version":3,"sources":["Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","connect","state","reducer","alert열렸니","reducer2","history","useHistory","id","useParams","찾은상품","shoes","find","상품","useState","alert","alert변경","누른탭변경","스위치","useContext","재고context","타이머","setTimeout","clearTimeout","arr","localStorage","getItem","JSON","parse","push","Set","setItem","stringify","className","src","width","title","content","price","onClick","재고변경","dispatch","type","데이터","name","quan","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"sNASIA,EAAKC,IAAOC,IAAV,8CAGFC,EAAKF,IAAOG,GAAV,+DAEK,SAAAC,GAAK,OAAIA,EAAMC,gBAqH1B,SAASC,EAAWF,GAKlB,OAJAG,qBAAU,WACRH,EAAMI,gCAAM,MAGI,IAAdJ,EAAMK,mBAAkB,6DACL,IAAdL,EAAMK,mBAAkB,6DACV,IAAdL,EAAMK,mBAAkB,kEAA5B,EAGP,SAASC,EAAKN,GACZ,OAAO,gDAASA,EAAMO,aAAG,MAUZC,uBAPf,SAAsBC,GACpB,MAAO,CACLA,MAAOA,EAAMC,QACbC,0BAAUF,EAAMG,YAILJ,EAvIf,SAAgBR,GACd,IAAIa,EAAUC,cACRC,EAAOC,cAAPD,GACFE,EAAOjB,EAAMkB,MAAMC,MAAK,SAAUC,GACpC,OAAOA,EAAGL,IAAMA,KAJG,EAMIM,oBAAS,GANb,mBAMdC,EANc,KAMPC,EANO,OAOFF,mBAAS,GAPP,mBAOhBhB,EAPgB,KAOXmB,EAPW,OAQFH,oBAAS,GARP,mBAQhBI,EARgB,KAQXrB,EARW,KAiCrB,OAvBSsB,qBAAWC,KAEpBxB,qBAAU,WACR,IAAIyB,EAAMC,YAAW,WACnBN,GAAQ,KACP,KACH,OAAO,WACLO,aAAaF,MAEd,IAEHzB,qBAAU,WACR,IAAI4B,EAAMC,aAAaC,QAAQ,YACbF,EAAN,OAARA,EAAoB,GACbG,KAAKC,MAAMJ,IAElBK,KAAKrB,GACTgB,EAAM,IAAIM,IAAIN,GACdA,EAAG,YAAOA,GAEVC,aAAaM,QAAQ,UAAWJ,KAAKK,UAAUR,MAC9C,IAGD,sBAAKS,UAAU,YAAf,UACE,cAAC7C,EAAD,UACE,cAACG,EAAD,CAAI0C,UAAU,MAAd,sBAGDlB,GACC,qBAAKkB,UAAU,WAAf,SACE,+GAIJ,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBACEC,IAAG,mDACDxB,EAAKF,GAAK,EADT,QAGH2B,MAAM,WAGV,sBAAKF,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBvB,EAAK0B,QAC3B,4BAAI1B,EAAK2B,UACT,8BAAI3B,EAAK4B,MAAT,YACA,cAACvC,EAAD,CAAMC,eAAIP,EAAMO,eAChB,wBACEiC,UAAU,iBACVM,QAAS,WACP9C,EAAM+C,yBAAK,CAAC,EAAG,GAAI,KACnB/C,EAAMgD,SAAS,CACbC,KAAM,2BACNC,qBAAK,CAAEnC,GAAIE,EAAKF,GAAIoC,KAAMlC,EAAK0B,MAAOS,KAAM,KAE9CvC,EAAQuB,KAAK,UARjB,yDALF,OAmBE,wBACEI,UAAU,iBACVM,QAAS,WACPjC,EAAQuB,KAAK,MAHjB,sCAQA,eAAC,IAAD,CAAKI,UAAU,OAAOa,QAAQ,OAAOC,iBAAiB,QAAtD,UACE,cAAC,IAAIC,KAAL,UACE,cAAC,IAAIC,KAAL,CACEC,SAAS,SACTX,QAAS,WACP1C,GAAM,GACNoB,EAAM,IAJV,sBAUF,cAAC,IAAI+B,KAAL,UACE,cAAC,IAAIC,KAAL,CACEC,SAAS,SACTX,QAAS,WACP1C,GAAM,GACNoB,EAAM,IAJV,2BAWJ,cAAC,IAAD,CAAekC,GAAIjC,EAAKkC,WAAW,MAAMC,QAAS,IAAlD,SACE,cAAC1D,EAAD,CAAYG,qBAAKA,EAAKD,iCAAOA,mB","file":"static/js/4.489c841b.chunk.js","sourcesContent":["import { Nav } from 'react-bootstrap';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss';\nimport { 재고context } from './App.js';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n\nlet 박스 = styled.div`\n  padding: 20px;\n`;\nlet 제목 = styled.h4`\n  font-size: 25px;\n  color: ${props => props.색상};\n`;\n\nfunction Detail(props) {\n  let history = useHistory();\n  let { id } = useParams();\n  let 찾은상품 = props.shoes.find(function (상품) {\n    return 상품.id == id;\n  });\n  const [alert, alert변경] = useState(true);\n  let [누른탭, 누른탭변경] = useState(0);\n  let [스위치, 스위치변경] = useState(false);\n\n  let 재고 = useContext(재고context);\n\n  useEffect(() => {\n    let 타이머 = setTimeout(() => {\n      alert변경(false);\n    }, 2000);\n    return () => {\n      clearTimeout(타이머);\n    };\n  }, []);\n\n  useEffect(() => {\n    let arr = localStorage.getItem('watched');\n    if (arr === null) arr = [];\n    else arr = JSON.parse(arr);\n\n    arr.push(id);\n    arr = new Set(arr);\n    arr = [...arr];\n\n    localStorage.setItem('watched', JSON.stringify(arr));\n  }, []);\n\n  return (\n    <div className='container'>\n      <박스>\n        <제목 className='red'>Detail</제목>\n      </박스>\n\n      {alert && (\n        <div className='my-alert'>\n          <p>재고가 얼마 남지 않았습니다.</p>\n        </div>\n      )}\n\n      <div className='row'>\n        <div className='col-md-6'>\n          <img\n            src={`https://codingapple1.github.io/shop/shoes${\n              찾은상품.id + 1\n            }.jpg`}\n            width='100%'\n          />\n        </div>\n        <div className='col-md-6 mt-4'>\n          <h4 className='pt-5'>{찾은상품.title}</h4>\n          <p>{찾은상품.content}</p>\n          <p>{찾은상품.price}원</p>\n          <Info 재고={props.재고} />\n          <button\n            className='btn btn-danger'\n            onClick={() => {\n              props.재고변경([9, 11, 12]);\n              props.dispatch({\n                type: '항목추가',\n                데이터: { id: 찾은상품.id, name: 찾은상품.title, quan: 1 },\n              });\n              history.push('/cart');\n            }}\n          >\n            장바구니에 담기\n          </button>\n          &nbsp;\n          <button\n            className='btn btn-danger'\n            onClick={() => {\n              history.push('/');\n            }}\n          >\n            뒤로가기\n          </button>\n          <Nav className='mt-5' variant='tabs' defaultActiveKey='/home'>\n            <Nav.Item>\n              <Nav.Link\n                eventKey='link-0'\n                onClick={() => {\n                  스위치변경(false);\n                  누른탭변경(0);\n                }}\n              >\n                Active\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                eventKey='link-1'\n                onClick={() => {\n                  스위치변경(false);\n                  누른탭변경(1);\n                }}\n              >\n                Option 2\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n          <CSSTransition in={스위치} classNames='wow' timeout={500}>\n            <TabContent 누른탭={누른탭} 스위치변경={스위치변경} />\n          </CSSTransition>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction TabContent(props) {\n  useEffect(() => {\n    props.스위치변경(true);\n  });\n\n  if (props.누른탭 === 0) return <div>0번째 내용</div>;\n  else if (props.누른탭 === 1) return <div>1번째 내용</div>;\n  else if (props.누른탭 === 2) return <div>2번째 내용</div>;\n}\n\nfunction Info(props) {\n  return <p>재고 : {props.재고[0]}</p>;\n}\n\nfunction state를props화(state) {\n  return {\n    state: state.reducer,\n    alert열렸니: state.reducer2,\n  };\n}\n\nexport default connect(state를props화)(Detail);\n"],"sourceRoot":""}