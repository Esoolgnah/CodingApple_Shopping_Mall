{"version":3,"sources":["data.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Cart","props","useHistory","dispatch","useDispatch","state","useSelector","reducer","length","Table","responsive","style","color","map","a","i","name","quan","onClick","type","데이터","alert열렸니","className","Detail","lazy","재고context","React","createContext","Card","history","useContext","push","shoes","src","width","App","useState","Data","shoes변경","더보기","재고","재고변경","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","exact","path","Provider","value","axios","get","then","result","data","catch","console","log","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","액션","found","findIndex","copy","reducer2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25582bc3.chunk.js","sourcesContent":["export default [\n  {\n    id: 0,\n    title: 'White and Black',\n    content: 'Born in France',\n    price: 120000,\n  },\n  {\n    id: 1,\n    title: 'Red Knit',\n    content: 'Born in Seoul',\n    price: 110000,\n  },\n  {\n    id: 2,\n    title: 'Grey Yordan',\n    content: 'Born in the States',\n    price: 130000,\n  },\n];\n","import React, { useEffect, memo } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect, useDispatch, useSelector } from 'react-redux';\n\nfunction Cart(props) {\n  let history = useHistory();\n  let dispatch = useDispatch();\n  let state = useSelector(state => state);\n  let style = { color: 'black' };\n\n  return (\n    <div>\n      {state.reducer.length > 0 ? (\n        <Table responsive>\n          <thead>\n            <tr style={style}>\n              <th>#</th>\n              <th>상품명</th>\n              <th>수량</th>\n              <th>변경</th>\n            </tr>\n          </thead>\n          <tbody>\n            {state.reducer.map((a, i) => {\n              return (\n                <tr key={i}>\n                  <td>{a.id}</td>\n                  <td>{a.name}</td>\n                  <td>{a.quan}</td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        dispatch({ type: '수량증가', 데이터: a.id });\n                      }}\n                    >\n                      +\n                    </button>\n                    &nbsp;\n                    <button\n                      onClick={() => {\n                        dispatch({ type: '수량감소', 데이터: a.id });\n                      }}\n                    >\n                      -\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      ) : (\n        '장바구니가 비어있습니다.'\n      )}\n      {props.alert열렸니 ? (\n        <div className='my-alert'>\n          <p>지금 구매하시면 20% 할인</p>\n          <button\n            onClick={() => {\n              dispatch({ type: 'alert닫기' });\n            }}\n          >\n            닫기\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\n// function state를props화(state) {\n//   return {\n//     state: state.reducer,\n//     alert열렸니: state.reducer2,\n//   };\n// }\n\n// export default connect(state를props화)(Cart);\nexport default Cart;\n","/* eslint-disable */\nimport React, { useState, useContext, lazy, Suspense } from 'react';\nimport { Navbar, Container, Nav } from 'react-bootstrap';\nimport './App.css';\nimport axios from 'axios';\nimport Data from './data.js';\nimport Cart from './Cart.js';\n// import Detail from './Detail.js';\nlet Detail = lazy(() => import('./Detail.js'));\n\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\n\nexport let 재고context = React.createContext();\n\nfunction App() {\n  let history = useHistory();\n  let [shoes, shoes변경] = useState(Data);\n  let [더보기, 더보기변경] = useState(false);\n  let [재고, 재고변경] = useState([10, 11, 12]);\n\n  return (\n    <div className='App'>\n      <Navbar bg='light' expand='lg'>\n        <Container>\n          <Navbar.Brand href='/'>ShoeShop</Navbar.Brand>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='me-auto'>\n              <Nav.Link as={Link} to='/'>\n                Home\n              </Nav.Link>\n              <Nav.Link as={Link} to='/cart'>\n                Cart\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Switch>\n        <Route exact path='/'>\n          <div className='Jumbotron'>\n            <div className='JumbotronBackground'>\n              <h1 className='JumbotronHello'>20% Season Off</h1>\n              <p className='JumbotronWelcome'>Welcome to ShoeShop!</p>\n              <button className='JumbotronButton'>Shop</button>\n            </div>\n          </div>\n\n          <div className='container'>\n            <재고context.Provider value={재고}>\n              <div className='row'>\n                {shoes.map((a, i) => {\n                  return <Card shoes={a} i={i} key={i} />;\n                })}\n              </div>\n            </재고context.Provider>\n\n            {!더보기 && (\n              <button\n                className='btn btn-primary'\n                onClick={() => {\n                  axios\n                    .get('https://codingapple1.github.io/shop/data2.json')\n                    .then(result => {\n                      if (result.data) shoes변경([...shoes, ...result.data]);\n                    })\n                    .catch(() => {\n                      console.log('실패');\n                    });\n                }}\n              >\n                More\n              </button>\n            )}\n          </div>\n        </Route>\n\n        <Route path='/cart'>\n          <Cart></Cart>\n        </Route>\n\n        <Route path='/detail/:id'>\n          <재고context.Provider value={재고}>\n            <Suspense fallback={<div>로딩중</div>}>\n              <Detail shoes={shoes} 재고={재고} 재고변경={재고변경} />\n            </Suspense>\n          </재고context.Provider>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Card(props) {\n  let history = useHistory();\n  let 재고 = useContext(재고context);\n\n  return (\n    <div\n      className='col-md-4'\n      key={props.id}\n      onClick={() => {\n        history.push('/detail/' + props.shoes.id);\n      }}\n    >\n      <img\n        src={\n          'https://codingapple1.github.io/shop/shoes' + (props.i + 1) + '.jpg'\n        }\n        width='100%'\n      />\n      <h4>{props.shoes.title}</h4>\n      <p>\n        {props.shoes.content} & {props.shoes.price}\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n  if (액션.type === 'alert닫기') {\n    state = false;\n    return state;\n  } else {\n    return state;\n  }\n}\nlet 초기값 = [];\nfunction reducer(state = 초기값, 액션) {\n  if (액션.type === '항목추가') {\n    let found = state.findIndex(a => {\n      return a.id === 액션.데이터.id;\n    });\n    if (found >= 0) {\n      let copy = [...state];\n      copy[found].quan++;\n      return copy;\n    } else {\n      let copy = [...state];\n      copy.push(액션.데이터);\n      return copy;\n    }\n  } else if (액션.type === '수량증가') {\n    let found = state.findIndex(a => {\n      return a.id === 액션.데이터;\n    });\n    let copy = [...state];\n    copy[found].quan++;\n    return copy;\n  } else if (액션.type === '수량감소') {\n    let found = state.findIndex(a => {\n      return a.id === 액션.데이터;\n    });\n    let copy = [...state];\n    if (copy[found].quan >= 1) copy[found].quan--;\n    return copy;\n  }\n  {\n    return state;\n  }\n}\nlet store = createStore(combineReducers({ reducer, reducer2 }));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}