{"version":3,"sources":["../node_modules/react-transition-group/esm/CSSTransition.js","pages/Detail.js"],"names":["removeClass","node","classes","split","forEach","c","removeOneClass","CSSTransition","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","appliedClasses","appear","enter","exit","onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","addClass","props","onEntering","_this$resolveArgument2","type","onEntered","_this$resolveArgument3","onExit","onExiting","onExited","nodeRef","current","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_inheritsLoose","_proto","prototype","phase","className","scrollTop","addOneClass","_addClass","_this$appliedClasses$","base","active","done","render","_this$props","_objectWithoutPropertiesLoose","React","createElement","Transition","_extends","Component","defaultProps","propTypes","recents","박스","styled","div","제목","h4","색상","TabContent","useEffect","스위치변경","누른탭","Detail","history","useHistory","dispatch","useDispatch","id","useParams","찾은상품","shoes","find","상품","useState","alert","alert변경","누른탭변경","스위치","recent","setRecent","타이머","setTimeout","clearTimeout","arr","localStorage","getItem","idx","JSON","parse","indexOf","splice","unshift","setItem","stringify","num","goDetailPage","el","axios","get","then","result","data","shoes변경","catch","console","log","getDataAndSetting","push","map","i","src","Number","onClick","width","title","content","price","toString","replace","데이터","name","quan","image","Nav","variant","defaultActiveKey","Item","Link","eventKey","style","color","in","timeout"],"mappings":"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","file":"static/js/3.351ff4c3.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","/* import CSS */\nimport '../styles/pages/Detail.scss';\n/* import Library */\nimport axios from 'axios';\nimport { Nav } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n\nlet recents = [];\nlet 박스 = styled.div`\n  padding: 20px;\n`;\nlet 제목 = styled.h4`\n  font-size: 25px;\n  color: ${(props) => props.색상};\n`;\n\nfunction Detail(props) {\n  let history = useHistory();\n  let dispatch = useDispatch();\n\n  let { id } = useParams();\n  let 찾은상품 = props.shoes.find(function (상품) {\n    return 상품.id == id;\n  });\n  const [alert, alert변경] = useState(true);\n  let [누른탭, 누른탭변경] = useState(0);\n  let [스위치, 스위치변경] = useState(false);\n  let [recent, setRecent] = useState([]);\n\n  /* 숫자에 콤마(,)추가하여 표시 */\n  const addComma = (num) => {\n    var regexp = /\\B(?=(\\d{3})+(?!\\d))/g;\n    return num.toString().replace(regexp, ',');\n  };\n\n  const addItemAndGoCart = () => {\n    // 장바구니 항목 추가\n    dispatch({\n      type: '항목추가',\n      데이터: {\n        id: 찾은상품.id,\n        name: 찾은상품.title,\n        quan: 1,\n        image: `https://codingapple1.github.io/shop/shoes${\n          찾은상품.id + 1\n        }.jpg`,\n        price: 찾은상품.price,\n      },\n    });\n\n    // 장바구니 이동 여부 모달 On\n    dispatch({\n      type: 'goCartModalOn',\n    });\n  };\n\n  const getDataAndSetting = (el) => {\n    if (props.shoes.length < 4) {\n      axios\n        .get('https://codingapple1.github.io/shop/data2.json')\n        .then((result) => {\n          if (result.data) props.shoes변경([...props.shoes, ...result.data]);\n        })\n        .catch(() => {\n          console.log('실패');\n        });\n    }\n\n    let arr = localStorage.getItem('watched');\n    if (arr === null) arr = [];\n    else arr = JSON.parse(arr);\n    let idx = arr.indexOf(el);\n    if (idx > -1) {\n      arr.splice(idx, 1);\n      arr.unshift(el);\n    } else {\n      arr.unshift(el);\n    }\n    if (arr.length > 3) {\n      arr = [arr[0], arr[1], arr[2]];\n    }\n    recents = arr;\n    localStorage.setItem('watched', JSON.stringify(arr));\n  };\n\n  useEffect(() => {\n    let 타이머 = setTimeout(() => {\n      alert변경(false);\n    }, 2000);\n    return () => {\n      clearTimeout(타이머);\n    };\n  }, []);\n\n  useEffect(() => {\n    // localStorage.clear();\n    let arr = localStorage.getItem('watched');\n    if (arr === null) arr = [];\n    else arr = JSON.parse(arr);\n    let idx = arr.indexOf(id);\n    if (idx > -1) {\n      arr.splice(idx, 1);\n      arr.unshift(id);\n    } else {\n      arr.unshift(id);\n    }\n    if (arr.length > 3) {\n      arr = [arr[0], arr[1], arr[2]];\n    }\n    recents = arr;\n    localStorage.setItem('watched', JSON.stringify(arr));\n  }, []);\n\n  const goDetailPage = (el) => {\n    getDataAndSetting(el);\n    setTimeout(() => {\n      history.push('/detail/' + el);\n      alert변경(true);\n      let 타이머 = setTimeout(() => {\n        alert변경(false);\n      }, 2000);\n      return () => {\n        clearTimeout(타이머);\n      };\n    }, 1000);\n  };\n\n  useEffect(() => {\n    setRecent(recents);\n  }, [recents]);\n\n  return (\n    <div className='container'>\n      <div id='recentBox'>\n        <p className='title'>Recently Viewed</p>\n        {recent.map((el, i) => {\n          return (\n            <div className='imgWrapper opacity' key={el}>\n              <img\n                className='img'\n                src={`https://codingapple1.github.io/shop/shoes${\n                  Number(el) + 1\n                }.jpg`}\n                onClick={() => {\n                  goDetailPage(el);\n                }}\n              ></img>\n            </div>\n          );\n        })}\n      </div>\n\n      <박스>\n        <제목 className='red'>Detail</제목>\n      </박스>\n\n      <div className={alert ? 'my-alert' : 'my-alert-hide'}>\n        <p>재고가 얼마 남지 않았습니다.</p>\n      </div>\n\n      <div className='row'>\n        <div className='col-md-6'>\n          <img\n            src={`https://codingapple1.github.io/shop/shoes${\n              찾은상품.id + 1\n            }.jpg`}\n            width='100%'\n          />\n        </div>\n        <div className='col-md-6 mt-4'>\n          <h4 className='pt-5'>{찾은상품.title}</h4>\n          <p>{찾은상품.content}</p>\n          <p>{addComma(찾은상품.price)}원</p>\n          <button\n            className='btn btn-primary opacity'\n            onClick={() => {\n              addItemAndGoCart();\n            }}\n          >\n            장바구니에 담기\n          </button>\n          &nbsp;\n          <button\n            className='btn btn-primary opacity'\n            onClick={() => {\n              history.push('/');\n            }}\n          >\n            뒤로가기\n          </button>\n          <Nav className='mt-5' variant='tabs' defaultActiveKey='/home'>\n            <Nav.Item>\n              <Nav.Link\n                eventKey='link-0'\n                style={{ color: 'black' }}\n                onClick={() => {\n                  스위치변경(false);\n                  누른탭변경(0);\n                }}\n              >\n                0\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                eventKey='link-1'\n                style={{ color: 'black' }}\n                onClick={() => {\n                  스위치변경(false);\n                  누른탭변경(1);\n                }}\n              >\n                1\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n          <CSSTransition in={스위치} classNames='wow' timeout={500}>\n            <TabContent 누른탭={누른탭} 스위치변경={스위치변경} />\n          </CSSTransition>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction TabContent(props) {\n  useEffect(() => {\n    props.스위치변경(true);\n  });\n\n  if (props.누른탭 === 0) return <div>0번째 내용</div>;\n  else if (props.누른탭 === 1) return <div>1번째 내용</div>;\n  else if (props.누른탭 === 2) return <div>2번째 내용</div>;\n}\n\nexport default Detail;\n"],"sourceRoot":""}