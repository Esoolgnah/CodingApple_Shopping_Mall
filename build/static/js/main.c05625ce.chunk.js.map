{"version":3,"sources":["reportWebVitals.js","index.js","data.js","Cart.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","reducer","state","액션","type","found","findIndex","a","id","데이터","copy","quan","push","reducer2","ReactDOM","render","StrictMode","App","document","getElementById","title","content","price","Cart","props","useHistory","dispatch","useDispatch","useSelector","length","Table","responsive","style","color","map","i","name","onClick","alert열렸니","className","Detail","lazy","재고context","React","createContext","Card","history","useContext","shoes","src","width","useState","Data","shoes변경","더보기","재고","재고변경","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Provider","value","axios","get","result","data","catch","console","log","fallback"],"mappings":"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","file":"static/js/main.c05625ce.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n  if (액션.type === 'alert닫기') {\n    state = false;\n    return state;\n  } else {\n    return state;\n  }\n}\nlet 초기값 = [];\nfunction reducer(state = 초기값, 액션) {\n  if (액션.type === '항목추가') {\n    let found = state.findIndex(a => {\n      return a.id === 액션.데이터.id;\n    });\n    if (found >= 0) {\n      let copy = [...state];\n      copy[found].quan++;\n      return copy;\n    } else {\n      let copy = [...state];\n      copy.push(액션.데이터);\n      return copy;\n    }\n  } else if (액션.type === '수량증가') {\n    let found = state.findIndex(a => {\n      return a.id === 액션.데이터;\n    });\n    let copy = [...state];\n    copy[found].quan++;\n    return copy;\n  } else if (액션.type === '수량감소') {\n    let found = state.findIndex(a => {\n      return a.id === 액션.데이터;\n    });\n    let copy = [...state];\n    if (copy[found].quan >= 1) copy[found].quan--;\n    return copy;\n  }\n  {\n    return state;\n  }\n}\nlet store = createStore(combineReducers({ reducer, reducer2 }));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default [\n  {\n    id: 0,\n    title: 'White and Black',\n    content: 'Born in France',\n    price: 120000,\n  },\n  {\n    id: 1,\n    title: 'Red Knit',\n    content: 'Born in Seoul',\n    price: 110000,\n  },\n  {\n    id: 2,\n    title: 'Grey Yordan',\n    content: 'Born in the States',\n    price: 130000,\n  },\n];\n","import React, { useEffect, memo } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect, useDispatch, useSelector } from 'react-redux';\n\nfunction Cart(props) {\n  let history = useHistory();\n  let dispatch = useDispatch();\n  let state = useSelector(state => state);\n  let style = { color: 'black' };\n\n  return (\n    <div>\n      {state.reducer.length > 0 ? (\n        <Table responsive>\n          <thead>\n            <tr style={style}>\n              <th>#</th>\n              <th>상품명</th>\n              <th>수량</th>\n              <th>변경</th>\n            </tr>\n          </thead>\n          <tbody>\n            {state.reducer.map((a, i) => {\n              return (\n                <tr key={i}>\n                  <td>{a.id}</td>\n                  <td>{a.name}</td>\n                  <td>{a.quan}</td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        dispatch({ type: '수량증가', 데이터: a.id });\n                      }}\n                    >\n                      +\n                    </button>\n                    &nbsp;\n                    <button\n                      onClick={() => {\n                        dispatch({ type: '수량감소', 데이터: a.id });\n                      }}\n                    >\n                      -\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      ) : (\n        '장바구니가 비어있습니다.'\n      )}\n      {props.alert열렸니 ? (\n        <div className='my-alert'>\n          <p>지금 구매하시면 20% 할인</p>\n          <button\n            onClick={() => {\n              dispatch({ type: 'alert닫기' });\n            }}\n          >\n            닫기\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\n// function state를props화(state) {\n//   return {\n//     state: state.reducer,\n//     alert열렸니: state.reducer2,\n//   };\n// }\n\n// export default connect(state를props화)(Cart);\nexport default Cart;\n","/* eslint-disable */\nimport React, { useState, useContext, lazy, Suspense } from 'react';\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\nimport './App.css';\nimport axios from 'axios';\nimport Data from './data.js';\nimport Cart from './Cart.js';\n// import Detail from './Detail.js';\nlet Detail = lazy(() => import('./Detail.js'));\n\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\n\nexport let 재고context = React.createContext();\n\nfunction App() {\n  let [shoes, shoes변경] = useState(Data);\n  let [더보기, 더보기변경] = useState(false);\n  let [재고, 재고변경] = useState([10, 11, 12]);\n\n  return (\n    <div className='App'>\n      <Navbar bg='light' expand='lg'>\n        <Container>\n          <Navbar.Brand href='#home'>ShoeShop</Navbar.Brand>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='me-auto'>\n              <Nav.Link as={Link} to='/'>\n                Home\n              </Nav.Link>\n              <Nav.Link as={Link} to='/cart'>\n                Cart\n              </Nav.Link>\n              <NavDropdown title='Dropdown' id='basic-nav-dropdown'>\n                <NavDropdown.Item href='#action/3.1'>Action</NavDropdown.Item>\n                <NavDropdown.Item href='#action/3.2'>\n                  Another action\n                </NavDropdown.Item>\n                <NavDropdown.Item href='#action/3.3'>\n                  Something\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href='#action/3.4'>\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Switch>\n        <Route exact path='/'>\n          <div className='Jumbotron'>\n            <div className='JumbotronBackground'>\n              <h1 className='JumbotronHello'>20% Season Off</h1>\n              <p className='JumbotronWelcome'>Welcome to ShoeShop!</p>\n              <button className='JumbotronButton'>Shop</button>\n            </div>\n          </div>\n\n          <div className='container'>\n            <재고context.Provider value={재고}>\n              <div className='row'>\n                {shoes.map((a, i) => {\n                  return <Card shoes={a} i={i} key={i} />;\n                })}\n              </div>\n            </재고context.Provider>\n\n            {!더보기 && (\n              <button\n                className='btn btn-primary'\n                onClick={() => {\n                  axios\n                    .get('https://codingapple1.github.io/shop/data2.json')\n                    .then(result => {\n                      if (result.data) shoes변경([...shoes, ...result.data]);\n                    })\n                    .catch(() => {\n                      console.log('실패');\n                    });\n                }}\n              >\n                More\n              </button>\n            )}\n          </div>\n        </Route>\n\n        <Route path='/cart'>\n          <Cart></Cart>\n        </Route>\n\n        <Route path='/detail/:id'>\n          <재고context.Provider value={재고}>\n            <Suspense fallback={<div>로딩중</div>}>\n              <Detail shoes={shoes} 재고={재고} 재고변경={재고변경} />\n            </Suspense>\n          </재고context.Provider>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Card(props) {\n  let history = useHistory();\n  let 재고 = useContext(재고context);\n\n  return (\n    <div\n      className='col-md-4'\n      key={props.id}\n      onClick={() => {\n        history.push('/detail/' + props.shoes.id);\n      }}\n    >\n      <img\n        src={\n          'https://codingapple1.github.io/shop/shoes' + (props.i + 1) + '.jpg'\n        }\n        width='100%'\n      />\n      <h4>{props.shoes.title}</h4>\n      <p>\n        {props.shoes.content} & {props.shoes.price}\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}