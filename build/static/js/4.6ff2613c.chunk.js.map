{"version":3,"sources":["pages/Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Detail","history","useHistory","dispatch","useDispatch","id","useParams","찾은상품","shoes","find","상품","useState","alert","alert변경","누른탭변경","스위치","타이머","setTimeout","clearTimeout","arr","localStorage","getItem","JSON","parse","push","Set","setItem","stringify","className","src","width","title","content","price","onClick","type","데이터","name","quan","image","variant","defaultActiveKey","Item","Link","eventKey","style","color","in","classNames","timeout"],"mappings":"oOAQIA,EAAKC,IAAOC,IAAV,8CAGFC,EAAKF,IAAOG,GAAV,+DAEK,SAAAC,GAAK,OAAIA,EAAMC,gBA2H1B,SAASC,EAAWF,GAKlB,OAJAG,qBAAU,WACRH,EAAMI,gCAAM,MAGI,IAAdJ,EAAMK,mBAAkB,6DACL,IAAdL,EAAMK,mBAAkB,6DACV,IAAdL,EAAMK,mBAAkB,kEAA5B,EAWQC,UA1If,SAAgBN,GACd,IAAIO,EAAUC,cACVC,EAAWC,cAETC,EAAOC,cAAPD,GACFE,EAAOb,EAAMc,MAAMC,MAAK,SAAUC,GACpC,OAAOA,EAAGL,IAAMA,KANG,EAQIM,oBAAS,GARb,mBAQdC,EARc,KAQPC,EARO,OASFF,mBAAS,GATP,mBAShBZ,EATgB,KASXe,EATW,OAUFH,oBAAS,GAVP,mBAUhBI,EAVgB,KAUXjB,EAVW,KAiCrB,OArBAD,qBAAU,WACR,IAAImB,EAAMC,YAAW,WACnBJ,GAAQ,KACP,KACH,OAAO,WACLK,aAAaF,MAEd,IAEHnB,qBAAU,WACR,IAAIsB,EAAMC,aAAaC,QAAQ,YACbF,EAAN,OAARA,EAAoB,GACbG,KAAKC,MAAMJ,IAElBK,KAAKnB,GACTc,EAAM,IAAIM,IAAIN,GACdA,EAAG,YAAOA,GAEVC,aAAaM,QAAQ,UAAWJ,KAAKK,UAAUR,MAC9C,IAGD,sBAAKS,UAAU,YAAf,UACE,cAACvC,EAAD,UACE,cAACG,EAAD,CAAIoC,UAAU,MAAd,sBAGF,qBAAKA,UAAWhB,EAAQ,WAAa,gBAArC,SACE,+GAGF,sBAAKgB,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBACEC,IAAG,mDACDtB,EAAKF,GAAK,EADT,QAGHyB,MAAM,WAGV,sBAAKF,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBrB,EAAKwB,QAC3B,4BAAIxB,EAAKyB,UACT,8BAAIzB,EAAK0B,MAAT,YACA,wBACEL,UAAU,0BACVM,QAAS,WACP/B,EAAS,CACPgC,KAAM,2BACNC,qBAAK,CACH/B,GAAIE,EAAKF,GACTgC,KAAM9B,EAAKwB,MACXO,KAAM,EACNC,MAAM,4CAAD,OACHhC,EAAKF,GAAK,EADP,QAGL4B,MAAO1B,EAAK0B,SAGhBhC,EAAQuB,KAAK,UAfjB,yDAJF,OAyBE,wBACEI,UAAU,0BACVM,QAAS,WACPjC,EAAQuB,KAAK,MAHjB,sCAQA,eAAC,IAAD,CAAKI,UAAU,OAAOY,QAAQ,OAAOC,iBAAiB,QAAtD,UACE,cAAC,IAAIC,KAAL,UACE,cAAC,IAAIC,KAAL,CACEC,SAAS,SACTC,MAAO,CAAEC,MAAO,SAChBZ,QAAS,WACPpC,GAAM,GACNgB,EAAM,IALV,iBAWF,cAAC,IAAI4B,KAAL,UACE,cAAC,IAAIC,KAAL,CACEC,SAAS,SACTC,MAAO,CAAEC,MAAO,SAChBZ,QAAS,WACPpC,GAAM,GACNgB,EAAM,IALV,oBAYJ,cAAC,IAAD,CAAeiC,GAAIhC,EAAKiC,WAAW,MAAMC,QAAS,IAAlD,SACE,cAACrD,EAAD,CAAYG,qBAAKA,EAAKD,iCAAOA","file":"static/js/4.6ff2613c.chunk.js","sourcesContent":["import { Nav } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport '../styles/pages/Detail.scss';\nimport { useDispatch } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n\nlet 박스 = styled.div`\n  padding: 20px;\n`;\nlet 제목 = styled.h4`\n  font-size: 25px;\n  color: ${props => props.색상};\n`;\n\nfunction Detail(props) {\n  let history = useHistory();\n  let dispatch = useDispatch();\n\n  let { id } = useParams();\n  let 찾은상품 = props.shoes.find(function (상품) {\n    return 상품.id == id;\n  });\n  const [alert, alert변경] = useState(true);\n  let [누른탭, 누른탭변경] = useState(0);\n  let [스위치, 스위치변경] = useState(false);\n\n  useEffect(() => {\n    let 타이머 = setTimeout(() => {\n      alert변경(false);\n    }, 2000);\n    return () => {\n      clearTimeout(타이머);\n    };\n  }, []);\n\n  useEffect(() => {\n    let arr = localStorage.getItem('watched');\n    if (arr === null) arr = [];\n    else arr = JSON.parse(arr);\n\n    arr.push(id);\n    arr = new Set(arr);\n    arr = [...arr];\n\n    localStorage.setItem('watched', JSON.stringify(arr));\n  }, []);\n\n  return (\n    <div className='container'>\n      <박스>\n        <제목 className='red'>Detail</제목>\n      </박스>\n\n      <div className={alert ? 'my-alert' : 'my-alert-hide'}>\n        <p>재고가 얼마 남지 않았습니다.</p>\n      </div>\n\n      <div className='row'>\n        <div className='col-md-6'>\n          <img\n            src={`https://codingapple1.github.io/shop/shoes${\n              찾은상품.id + 1\n            }.jpg`}\n            width='100%'\n          />\n        </div>\n        <div className='col-md-6 mt-4'>\n          <h4 className='pt-5'>{찾은상품.title}</h4>\n          <p>{찾은상품.content}</p>\n          <p>{찾은상품.price}원</p>\n          <button\n            className='btn btn-primary opacity'\n            onClick={() => {\n              dispatch({\n                type: '항목추가',\n                데이터: {\n                  id: 찾은상품.id,\n                  name: 찾은상품.title,\n                  quan: 1,\n                  image: `https://codingapple1.github.io/shop/shoes${\n                    찾은상품.id + 1\n                  }.jpg`,\n                  price: 찾은상품.price,\n                },\n              });\n              history.push('/cart');\n            }}\n          >\n            장바구니에 담기\n          </button>\n          &nbsp;\n          <button\n            className='btn btn-primary opacity'\n            onClick={() => {\n              history.push('/');\n            }}\n          >\n            뒤로가기\n          </button>\n          <Nav className='mt-5' variant='tabs' defaultActiveKey='/home'>\n            <Nav.Item>\n              <Nav.Link\n                eventKey='link-0'\n                style={{ color: 'black' }}\n                onClick={() => {\n                  스위치변경(false);\n                  누른탭변경(0);\n                }}\n              >\n                0\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                eventKey='link-1'\n                style={{ color: 'black' }}\n                onClick={() => {\n                  스위치변경(false);\n                  누른탭변경(1);\n                }}\n              >\n                1\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n          <CSSTransition in={스위치} classNames='wow' timeout={500}>\n            <TabContent 누른탭={누른탭} 스위치변경={스위치변경} />\n          </CSSTransition>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction TabContent(props) {\n  useEffect(() => {\n    props.스위치변경(true);\n  });\n\n  if (props.누른탭 === 0) return <div>0번째 내용</div>;\n  else if (props.누른탭 === 1) return <div>1번째 내용</div>;\n  else if (props.누른탭 === 2) return <div>2번째 내용</div>;\n}\n\n// function state를props화(state) {\n//   return {\n//     state: state.reducer,\n//     alert열렸니: state.reducer2,\n//   };\n// }\n\n// export default connect(state를props화)(Detail);\nexport default Detail;\n"],"sourceRoot":""}